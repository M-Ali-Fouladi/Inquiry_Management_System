@model CustomMembershipEF.Models.RegisterModel


@{
    ViewBag.Title = "Register";
}

<h2>صفحه ثبت کاربر جدید</h2>
<p>
  لطفا اطلاعات خود را وارد کرده و سپس روی دکمه   ثبت کاربر   کلیک نمایید
</p>
<p>
    کلمه عبور می بایست حداقل  @Membership.MinRequiredPasswordLength کاراکتر باشد .
</p>

    @{
        if (ViewBag.error!=null)
        {
            <h2>پیغام خطا</h2>
      <h2>@ViewBag.error</h2>
        }
        
        }
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Scripts/PersianDatePicker.js"></script>
<script src="~/Scripts/PersianDatePicker.min.js"></script>
<link href="~/Content/PersianDatePicker.min.css" rel="stylesheet" />
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>
          
            <div class="editor-label">
                @Html.Label("نام کاربری")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UserName)
                @Html.ValidationMessageFor(m => m.UserName)
            </div>

            <div class="editor-label">
                @Html.Label("نام")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Name)
                @Html.ValidationMessageFor(m => m.Name)
            </div>

            <div class="editor-label">
                @Html.Label("نام خانوادگی")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Family)
                @Html.ValidationMessageFor(m => m.Family)
            </div>


            <div class="editor-label">
                @Html.Label("ایمیل")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UserEmailAddress)
                @Html.ValidationMessageFor(m => m.UserEmailAddress)
            </div>


            <div class="editor-label">
                @Html.Label("آدرس منزل")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Address)
                @Html.ValidationMessageFor(m => m.Address)
            </div>
            
            <div class="editor-label">
                @Html.Label("تاریخ تولد")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Birthdate, new { onclick = "PersianDatePicker.Show(this, '1366/03/22');" })
                @Html.ValidationMessageFor(m => m.Birthdate)
            </div>
          
            <div class="editor-label">
                @Html.Label("تحصیلات")
              
            </div>
            <div class="editor-field">
                
               @* @Html.DropDownListFor(model => model.education, (SelectList)ViewBag.EducationList);*@
               @Html.DropDownListFor(model => model.education,
                                 new SelectList (new List<System.Web.Mvc.SelectListItem> {
                                 new System.Web.Mvc.SelectListItem { Text = "دیپلم", Value = "دیپلم"},
                                 new System.Web.Mvc.SelectListItem { Text = "فوق دیپلم", Value = "فوق دیپلم"},
                                 new System.Web.Mvc.SelectListItem { Text = "لیسانس", Value = "لیسانس"},
                                 new System.Web.Mvc.SelectListItem { Text = "فوق لیسانس", Value = "فوق لیسانس"},
                                 new System.Web.Mvc.SelectListItem { Text = "دکتری", Value = "دکتری"}
                                 },"Value", "Text"),
                        "انتخاب کنید",
                         new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.education)
            </div>



            <div class="editor-label">
                @Html.Label("کلمه عبور")
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.Label("تکرار کلمه عبور")
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            @if (Request.IsAuthenticated)
            {
                if (User.IsInRole("Admin"))
                {
               <div class="editor-label">
            @Html.Label("نوع کاربری ")
        </div>
        <div class="editor-field">
          @Html.DropDownListFor(model => model.GroupID, (SelectList)ViewBag.RegisterGroupID);
        
        </div>
                }
            }
            else
            {
                <div class="editor-label">
                    @Html.Label("نوع کاربری ")
                </div>
                <div class="editor-field">
                    <input type="text" value="Users" name="TypeText" />
                    </div>

            }


                    <p>
                        <input type="submit" value="ثبت کاربر" />
                    </p>
</fieldset>
    </div>
}
